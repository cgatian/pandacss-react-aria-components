import { expect, test } from "vitest";
import { createConditions } from "./conditions";

test("no configuration specified", () => {
  expect(createConditions({})).toEqual({
    allowsDragging: "&[data-allows-dragging]",
    allowsRemoving: "&[data-allows-removing]",
    allowsSorting: "&[data-allows-sorting]",
    current: "&[data-current]",
    disabled:
      "&:where([data-rac])[data-disabled], &:where(:not([data-rac])):is(:disabled, [disabled], [data-disabled])",
    dragging: "&[data-dragging]",
    dropTarget: "&[data-drop-target]",
    empty:
      "&:where([data-rac])[data-empty], &:where(:not([data-rac])):is(:empty, [data-empty])",
    entering: "&[data-entering]",
    exiting: "&[data-exiting]",
    focus:
      "&:where([data-rac])[data-focused], &:where(:not([data-rac])):is(:focus, [data-focus])",
    focusVisible:
      "&:where([data-rac])[data-focus-visible], &:where(:not([data-rac])):is(:focus-visible, [data-focus-visible])",
    focusWithin:
      "&:where([data-rac])[data-focus-within], &:where(:not([data-rac])):is(:focus-within, [data-focus-within])",
    groupAllowsDragging: ".group[data-allows-dragging] &",
    groupAllowsRemoving: ".group[data-allows-removing] &",
    groupAllowsSorting: ".group[data-allows-sorting] &",
    groupCurrent: ".group[data-current] &",
    groupDisabled:
      ".group:where([data-rac])[data-disabled] &, .group:where(:not([data-rac])):is(:disabled, [disabled], [data-disabled]) &",
    groupDragging: ".group[data-dragging] &",
    groupDropTarget: ".group[data-drop-target] &",
    groupEmpty:
      ".group:where([data-rac])[data-empty] &, .group:where(:not([data-rac])):is(:empty, [data-empty]) &",
    groupEntering: ".group[data-entering] &",
    groupExiting: ".group[data-exiting] &",
    groupFocus:
      ".group:where([data-rac])[data-focused] &, .group:where(:not([data-rac])):is(:focus, [data-focus]) &",
    groupFocusVisible:
      ".group:where([data-rac])[data-focus-visible] &, .group:where(:not([data-rac])):is(:focus-visible, [data-focus-visible]) &",
    groupFocusWithin:
      ".group:where([data-rac])[data-focus-within] &, .group:where(:not([data-rac])):is(:focus-within, [data-focus-within]) &",
    groupHasSubmenu: ".group[data-has-submenu] &",
    groupHover:
      ".group:where([data-rac])[data-hovered] &, .group:where(:not([data-rac])):is(:hover, [data-hover]) &",
    groupIndeterminate:
      ".group:where([data-rac])[data-indeterminate] &, .group:where(:not([data-rac])):is(:indeterminate, [data-indeterminate]) &",
    groupInvalid:
      ".group:where([data-rac])[data-invalid] &, .group:where(:not([data-rac])):is(:invalid, [data-invalid]) &",
    groupLayoutGrid: '.group[data-layout="grid"] &',
    groupLayoutStack: '.group[data-layout="stack"] &',
    groupOpen:
      ".group:where([data-rac])[data-open] &, .group:where(:not([data-rac]))[open] &",
    groupOrientationHorizontal: '.group[data-orientation="horizontal"] &',
    groupOrientationVertical: '.group[data-orientation="vertical"] &',
    groupOutsideMonth: ".group[data-outside-month] &",
    groupOutsideVisibleRange: ".group[data-outside-visible-range] &",
    groupPlaceholderShown:
      ".group[data-placeholder] &, .group:placeholder-shown &",
    groupPlacementBottom: '.group[data-placement="bottom"] &',
    groupPlacementLeft: '.group[data-placement="left"] &',
    groupPlacementRight: '.group[data-placement="right"] &',
    groupPlacementTop: '.group[data-placement="top"] &',
    groupPressed: ".group[data-pressed] &",
    groupReadOnly:
      ".group:where([data-rac])[data-readonly] &, .group:where(:not([data-rac])):is(:read-only, [data-read-only]) &",
    groupRequired:
      ".group:where([data-rac])[data-required] &, .group:where(:not([data-rac])):is(:required, [data-required]) &",
    groupResizableBoth: '.group[data-resizable-direction="both"] &',
    groupResizableLeft: '.group[data-resizable-direction="left"] &',
    groupResizableRight: '.group[data-resizable-direction="right"] &',
    groupResizing: ".group[data-resizing] &",
    groupSelected: ".group[data-selected] &",
    groupSelectionEnd: ".group[data-selection-end] &",
    groupSelectionMultiple: '.group[data-selection-mode="multiple"] &',
    groupSelectionSingle: '.group[data-selection-mode="single"] &',
    groupSelectionStart: ".group[data-selection-start] &",
    groupSortAscending: '.group[data-sort-direction="ascending"] &',
    groupSortDescending: '.group[data-sort-direction="descending"] &',
    groupTypeDay: '.group[data-type="day"] &',
    groupTypeLiteral: '.group[data-type="literal"] &',
    groupTypeMonth: '.group[data-type="month"] &',
    groupTypeYear: '.group[data-type="year"] &',
    groupUnavailable: ".group[data-unavailable] &",
    hasSubmenu: "&[data-has-submenu]",
    hover:
      "&:where([data-rac])[data-hovered], &:where(:not([data-rac])):is(:hover, [data-hover])",
    indeterminate:
      "&:where([data-rac])[data-indeterminate], &:where(:not([data-rac])):is(:indeterminate, [data-indeterminate])",
    invalid:
      "&:where([data-rac])[data-invalid], &:where(:not([data-rac])):is(:invalid, [data-invalid])",
    layoutGrid: '&[data-layout="grid"]',
    layoutStack: '&[data-layout="stack"]',
    open: "&:where([data-rac])[data-open], &:where(:not([data-rac]))[open]",
    orientationHorizontal: '&[data-orientation="horizontal"]',
    orientationVertical: '&[data-orientation="vertical"]',
    outsideMonth: "&[data-outside-month]",
    outsideVisibleRange: "&[data-outside-visible-range]",
    peerAllowsDragging: ".peer[data-allows-dragging] ~ &",
    peerAllowsRemoving: ".peer[data-allows-removing] ~ &",
    peerAllowsSorting: ".peer[data-allows-sorting] ~ &",
    peerCurrent: ".peer[data-current] ~ &",
    peerDisabled:
      ".peer:where([data-rac])[data-disabled] ~ &, .peer:where(:not([data-rac])):is(:disabled, [disabled], [data-disabled]) ~ &",
    peerDragging: ".peer[data-dragging] ~ &",
    peerDropTarget: ".peer[data-drop-target] ~ &",
    peerEmpty:
      ".peer:where([data-rac])[data-empty] ~ &, .peer:where(:not([data-rac])):is(:empty, [data-empty]) ~ &",
    peerEntering: ".peer[data-entering] ~ &",
    peerExiting: ".peer[data-exiting] ~ &",
    peerFocus:
      ".peer:where([data-rac])[data-focused] ~ &, .peer:where(:not([data-rac])):is(:focus, [data-focus]) ~ &",
    peerFocusVisible:
      ".peer:where([data-rac])[data-focus-visible] ~ &, .peer:where(:not([data-rac])):is(:focus-visible, [data-focus-visible]) ~ &",
    peerFocusWithin:
      ".peer:where([data-rac])[data-focus-within] ~ &, .peer:where(:not([data-rac])):is(:focus-within, [data-focus-within]) ~ &",
    peerHasSubmenu: ".peer[data-has-submenu] ~ &",
    peerHover:
      ".peer:where([data-rac])[data-hovered] ~ &, .peer:where(:not([data-rac])):is(:hover, [data-hover]) ~ &",
    peerIndeterminate:
      ".peer:where([data-rac])[data-indeterminate] ~ &, .peer:where(:not([data-rac])):is(:indeterminate, [data-indeterminate]) ~ &",
    peerInvalid:
      ".peer:where([data-rac])[data-invalid] ~ &, .peer:where(:not([data-rac])):is(:invalid, [data-invalid]) ~ &",
    peerLayoutGrid: '.peer[data-layout="grid"] ~ &',
    peerLayoutStack: '.peer[data-layout="stack"] ~ &',
    peerOpen:
      ".peer:where([data-rac])[data-open] ~ &, .peer:where(:not([data-rac]))[open] ~ &",
    peerOrientationHorizontal: '.peer[data-orientation="horizontal"] ~ &',
    peerOrientationVertical: '.peer[data-orientation="vertical"] ~ &',
    peerOutsideMonth: ".peer[data-outside-month] ~ &",
    peerOutsideVisibleRange: ".peer[data-outside-visible-range] ~ &",
    peerPlaceholderShown:
      ".peer[data-placeholder] ~ &, .peer:placeholder-shown ~ &",
    peerPlacementBottom: '.peer[data-placement="bottom"] ~ &',
    peerPlacementLeft: '.peer[data-placement="left"] ~ &',
    peerPlacementRight: '.peer[data-placement="right"] ~ &',
    peerPlacementTop: '.peer[data-placement="top"] ~ &',
    peerPressed: ".peer[data-pressed] ~ &",
    peerReadOnly:
      ".peer:where([data-rac])[data-readonly] ~ &, .peer:where(:not([data-rac])):is(:read-only, [data-read-only]) ~ &",
    peerRequired:
      ".peer:where([data-rac])[data-required] ~ &, .peer:where(:not([data-rac])):is(:required, [data-required]) ~ &",
    peerResizableBoth: '.peer[data-resizable-direction="both"] ~ &',
    peerResizableLeft: '.peer[data-resizable-direction="left"] ~ &',
    peerResizableRight: '.peer[data-resizable-direction="right"] ~ &',
    peerResizing: ".peer[data-resizing] ~ &",
    peerSelected: ".peer[data-selected] ~ &",
    peerSelectionEnd: ".peer[data-selection-end] ~ &",
    peerSelectionMultiple: '.peer[data-selection-mode="multiple"] ~ &',
    peerSelectionSingle: '.peer[data-selection-mode="single"] ~ &',
    peerSelectionStart: ".peer[data-selection-start] ~ &",
    peerSortAscending: '.peer[data-sort-direction="ascending"] ~ &',
    peerSortDescending: '.peer[data-sort-direction="descending"] ~ &',
    peerTypeDay: '.peer[data-type="day"] ~ &',
    peerTypeLiteral: '.peer[data-type="literal"] ~ &',
    peerTypeMonth: '.peer[data-type="month"] ~ &',
    peerTypeYear: '.peer[data-type="year"] ~ &',
    peerUnavailable: ".peer[data-unavailable] ~ &",
    placeholderShown: "&[data-placeholder], &:placeholder-shown",
    placementBottom: '&[data-placement="bottom"]',
    placementLeft: '&[data-placement="left"]',
    placementRight: '&[data-placement="right"]',
    placementTop: '&[data-placement="top"]',
    pressed: "&[data-pressed]",
    readOnly:
      "&:where([data-rac])[data-readonly], &:where(:not([data-rac])):is(:read-only, [data-read-only])",
    required:
      "&:where([data-rac])[data-required], &:where(:not([data-rac])):is(:required, [data-required])",
    resizableBoth: '&[data-resizable-direction="both"]',
    resizableLeft: '&[data-resizable-direction="left"]',
    resizableRight: '&[data-resizable-direction="right"]',
    resizing: "&[data-resizing]",
    selected: "&[data-selected]",
    selectionEnd: "&[data-selection-end]",
    selectionMultiple: '&[data-selection-mode="multiple"]',
    selectionSingle: '&[data-selection-mode="single"]',
    selectionStart: "&[data-selection-start]",
    sortAscending: '&[data-sort-direction="ascending"]',
    sortDescending: '&[data-sort-direction="descending"]',
    typeDay: '&[data-type="day"]',
    typeLiteral: '&[data-type="literal"]',
    typeMonth: '&[data-type="month"]',
    typeYear: '&[data-type="year"]',
    unavailable: "&[data-unavailable]",
  });
});

test("prefix specified, no panda base", () => {
  expect(
    // panda base should not be included when prefix is specified
    createConditions({ prefix: "rac", includePandaPresetBase: true })
  ).toEqual({
    racAllowsDragging: "&[data-allows-dragging]",
    racAllowsRemoving: "&[data-allows-removing]",
    racAllowsSorting: "&[data-allows-sorting]",
    racCurrent: "&[data-current]",
    racDisabled: "&[data-disabled]",
    racDragging: "&[data-dragging]",
    racDropTarget: "&[data-drop-target]",
    racEmpty: "&[data-empty]",
    racEntering: "&[data-entering]",
    racExiting: "&[data-exiting]",
    racFocus: "&[data-focused]",
    racFocusVisible: "&[data-focus-visible]",
    racFocusWithin: "&[data-focus-within]",
    racGroupAllowsDragging: ".group[data-allows-dragging] &",
    racGroupAllowsRemoving: ".group[data-allows-removing] &",
    racGroupAllowsSorting: ".group[data-allows-sorting] &",
    racGroupCurrent: ".group[data-current] &",
    racGroupDisabled: ".group[data-disabled] &",
    racGroupDragging: ".group[data-dragging] &",
    racGroupDropTarget: ".group[data-drop-target] &",
    racGroupEmpty: ".group[data-empty] &",
    racGroupEntering: ".group[data-entering] &",
    racGroupExiting: ".group[data-exiting] &",
    racGroupFocus: ".group[data-focused] &",
    racGroupFocusVisible: ".group[data-focus-visible] &",
    racGroupFocusWithin: ".group[data-focus-within] &",
    racGroupHasSubmenu: ".group[data-has-submenu] &",
    racGroupHover: ".group[data-hovered] &",
    racGroupIndeterminate: ".group[data-indeterminate] &",
    racGroupInvalid: ".group[data-invalid] &",
    racGroupLayoutGrid: '.group[data-layout="grid"] &',
    racGroupLayoutStack: '.group[data-layout="stack"] &',
    racGroupOpen: ".group[data-open] &",
    racGroupOrientationHorizontal: '.group[data-orientation="horizontal"] &',
    racGroupOrientationVertical: '.group[data-orientation="vertical"] &',
    racGroupOutsideMonth: ".group[data-outside-month] &",
    racGroupOutsideVisibleRange: ".group[data-outside-visible-range] &",
    racGroupPlaceholderShown: ".group[data-placeholder] &",
    racGroupPlacementBottom: '.group[data-placement="bottom"] &',
    racGroupPlacementLeft: '.group[data-placement="left"] &',
    racGroupPlacementRight: '.group[data-placement="right"] &',
    racGroupPlacementTop: '.group[data-placement="top"] &',
    racGroupPressed: ".group[data-pressed] &",
    racGroupReadOnly: ".group[data-readonly] &",
    racGroupRequired: ".group[data-required] &",
    racGroupResizableBoth: '.group[data-resizable-direction="both"] &',
    racGroupResizableLeft: '.group[data-resizable-direction="left"] &',
    racGroupResizableRight: '.group[data-resizable-direction="right"] &',
    racGroupResizing: ".group[data-resizing] &",
    racGroupSelected: ".group[data-selected] &",
    racGroupSelectionEnd: ".group[data-selection-end] &",
    racGroupSelectionMultiple: '.group[data-selection-mode="multiple"] &',
    racGroupSelectionSingle: '.group[data-selection-mode="single"] &',
    racGroupSelectionStart: ".group[data-selection-start] &",
    racGroupSortAscending: '.group[data-sort-direction="ascending"] &',
    racGroupSortDescending: '.group[data-sort-direction="descending"] &',
    racGroupTypeDay: '.group[data-type="day"] &',
    racGroupTypeLiteral: '.group[data-type="literal"] &',
    racGroupTypeMonth: '.group[data-type="month"] &',
    racGroupTypeYear: '.group[data-type="year"] &',
    racGroupUnavailable: ".group[data-unavailable] &",
    racHasSubmenu: "&[data-has-submenu]",
    racHover: "&[data-hovered]",
    racIndeterminate: "&[data-indeterminate]",
    racInvalid: "&[data-invalid]",
    racLayoutGrid: '&[data-layout="grid"]',
    racLayoutStack: '&[data-layout="stack"]',
    racOpen: "&[data-open]",
    racOrientationHorizontal: '&[data-orientation="horizontal"]',
    racOrientationVertical: '&[data-orientation="vertical"]',
    racOutsideMonth: "&[data-outside-month]",
    racOutsideVisibleRange: "&[data-outside-visible-range]",
    racPeerAllowsDragging: ".peer[data-allows-dragging] ~ &",
    racPeerAllowsRemoving: ".peer[data-allows-removing] ~ &",
    racPeerAllowsSorting: ".peer[data-allows-sorting] ~ &",
    racPeerCurrent: ".peer[data-current] ~ &",
    racPeerDisabled: ".peer[data-disabled] ~ &",
    racPeerDragging: ".peer[data-dragging] ~ &",
    racPeerDropTarget: ".peer[data-drop-target] ~ &",
    racPeerEmpty: ".peer[data-empty] ~ &",
    racPeerEntering: ".peer[data-entering] ~ &",
    racPeerExiting: ".peer[data-exiting] ~ &",
    racPeerFocus: ".peer[data-focused] ~ &",
    racPeerFocusVisible: ".peer[data-focus-visible] ~ &",
    racPeerFocusWithin: ".peer[data-focus-within] ~ &",
    racPeerHasSubmenu: ".peer[data-has-submenu] ~ &",
    racPeerHover: ".peer[data-hovered] ~ &",
    racPeerIndeterminate: ".peer[data-indeterminate] ~ &",
    racPeerInvalid: ".peer[data-invalid] ~ &",
    racPeerLayoutGrid: '.peer[data-layout="grid"] ~ &',
    racPeerLayoutStack: '.peer[data-layout="stack"] ~ &',
    racPeerOpen: ".peer[data-open] ~ &",
    racPeerOrientationHorizontal: '.peer[data-orientation="horizontal"] ~ &',
    racPeerOrientationVertical: '.peer[data-orientation="vertical"] ~ &',
    racPeerOutsideMonth: ".peer[data-outside-month] ~ &",
    racPeerOutsideVisibleRange: ".peer[data-outside-visible-range] ~ &",
    racPeerPlaceholderShown: ".peer[data-placeholder] ~ &",
    racPeerPlacementBottom: '.peer[data-placement="bottom"] ~ &',
    racPeerPlacementLeft: '.peer[data-placement="left"] ~ &',
    racPeerPlacementRight: '.peer[data-placement="right"] ~ &',
    racPeerPlacementTop: '.peer[data-placement="top"] ~ &',
    racPeerPressed: ".peer[data-pressed] ~ &",
    racPeerReadOnly: ".peer[data-readonly] ~ &",
    racPeerRequired: ".peer[data-required] ~ &",
    racPeerResizableBoth: '.peer[data-resizable-direction="both"] ~ &',
    racPeerResizableLeft: '.peer[data-resizable-direction="left"] ~ &',
    racPeerResizableRight: '.peer[data-resizable-direction="right"] ~ &',
    racPeerResizing: ".peer[data-resizing] ~ &",
    racPeerSelected: ".peer[data-selected] ~ &",
    racPeerSelectionEnd: ".peer[data-selection-end] ~ &",
    racPeerSelectionMultiple: '.peer[data-selection-mode="multiple"] ~ &',
    racPeerSelectionSingle: '.peer[data-selection-mode="single"] ~ &',
    racPeerSelectionStart: ".peer[data-selection-start] ~ &",
    racPeerSortAscending: '.peer[data-sort-direction="ascending"] ~ &',
    racPeerSortDescending: '.peer[data-sort-direction="descending"] ~ &',
    racPeerTypeDay: '.peer[data-type="day"] ~ &',
    racPeerTypeLiteral: '.peer[data-type="literal"] ~ &',
    racPeerTypeMonth: '.peer[data-type="month"] ~ &',
    racPeerTypeYear: '.peer[data-type="year"] ~ &',
    racPeerUnavailable: ".peer[data-unavailable] ~ &",
    racPlaceholderShown: "&[data-placeholder]",
    racPlacementBottom: '&[data-placement="bottom"]',
    racPlacementLeft: '&[data-placement="left"]',
    racPlacementRight: '&[data-placement="right"]',
    racPlacementTop: '&[data-placement="top"]',
    racPressed: "&[data-pressed]",
    racReadOnly: "&[data-readonly]",
    racRequired: "&[data-required]",
    racResizableBoth: '&[data-resizable-direction="both"]',
    racResizableLeft: '&[data-resizable-direction="left"]',
    racResizableRight: '&[data-resizable-direction="right"]',
    racResizing: "&[data-resizing]",
    racSelected: "&[data-selected]",
    racSelectionEnd: "&[data-selection-end]",
    racSelectionMultiple: '&[data-selection-mode="multiple"]',
    racSelectionSingle: '&[data-selection-mode="single"]',
    racSelectionStart: "&[data-selection-start]",
    racSortAscending: '&[data-sort-direction="ascending"]',
    racSortDescending: '&[data-sort-direction="descending"]',
    racTypeDay: '&[data-type="day"]',
    racTypeLiteral: '&[data-type="literal"]',
    racTypeMonth: '&[data-type="month"]',
    racTypeYear: '&[data-type="year"]',
    racUnavailable: "&[data-unavailable]",
  });
});

test("no prefix, no panda base, no combinators", () => {
  expect(
    createConditions({
      includePandaPresetBase: false,
      includeCombinators: false,
    })
  ).toEqual({
    allowsDragging: "&[data-allows-dragging]",
    allowsRemoving: "&[data-allows-removing]",
    allowsSorting: "&[data-allows-sorting]",
    current: "&[data-current]",
    disabled:
      "&:where([data-rac])[data-disabled], &:where(:not([data-rac])):disabled",
    dragging: "&[data-dragging]",
    dropTarget: "&[data-drop-target]",
    empty: "&:where([data-rac])[data-empty], &:where(:not([data-rac])):empty",
    entering: "&[data-entering]",
    exiting: "&[data-exiting]",
    focus: "&:where([data-rac])[data-focused], &:where(:not([data-rac])):focus",
    focusVisible:
      "&:where([data-rac])[data-focus-visible], &:where(:not([data-rac])):focus-visible",
    focusWithin:
      "&:where([data-rac])[data-focus-within], &:where(:not([data-rac])):focus-within",
    hasSubmenu: "&[data-has-submenu]",
    hover: "&:where([data-rac])[data-hovered], &:where(:not([data-rac])):hover",
    indeterminate:
      "&:where([data-rac])[data-indeterminate], &:where(:not([data-rac])):indeterminate",
    invalid:
      "&:where([data-rac])[data-invalid], &:where(:not([data-rac])):invalid",
    layoutGrid: '&[data-layout="grid"]',
    layoutStack: '&[data-layout="stack"]',
    open: "&:where([data-rac])[data-open], &:where(:not([data-rac]))[open]",
    orientationHorizontal: '&[data-orientation="horizontal"]',
    orientationVertical: '&[data-orientation="vertical"]',
    outsideMonth: "&[data-outside-month]",
    outsideVisibleRange: "&[data-outside-visible-range]",
    placeholderShown: "&[data-placeholder], &:placeholder-shown",
    placementBottom: '&[data-placement="bottom"]',
    placementLeft: '&[data-placement="left"]',
    placementRight: '&[data-placement="right"]',
    placementTop: '&[data-placement="top"]',
    pressed: "&[data-pressed]",
    readOnly:
      "&:where([data-rac])[data-readonly], &:where(:not([data-rac])):read-only",
    required:
      "&:where([data-rac])[data-required], &:where(:not([data-rac])):required",
    resizableBoth: '&[data-resizable-direction="both"]',
    resizableLeft: '&[data-resizable-direction="left"]',
    resizableRight: '&[data-resizable-direction="right"]',
    resizing: "&[data-resizing]",
    selected: "&[data-selected]",
    selectionEnd: "&[data-selection-end]",
    selectionMultiple: '&[data-selection-mode="multiple"]',
    selectionSingle: '&[data-selection-mode="single"]',
    selectionStart: "&[data-selection-start]",
    sortAscending: '&[data-sort-direction="ascending"]',
    sortDescending: '&[data-sort-direction="descending"]',
    typeDay: '&[data-type="day"]',
    typeLiteral: '&[data-type="literal"]',
    typeMonth: '&[data-type="month"]',
    typeYear: '&[data-type="year"]',
    unavailable: "&[data-unavailable]",
  });
});
